{"version":3,"file":"block-editor/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;ACAoD;AACC;AAChB;AACoB;AAO1B;AACyC;AAExEA,kEAAc,CAAC,YAAY,EAAE;EACzBY,MAAMA,CAAA,EAAG;IACL,MAAM;MAACC,QAAQ;MAAEC,QAAQ;MAAEC,cAAc;MAAEC;IAAiB,CAAC,GAAGb,0DAAS,CAAEc,MAAM,IAAK;MAClF,OAAOA,MAAM,CAAC,aAAa,CAAC,CAACC,sBAAsB,CAAC,MAAM,CAAC;IAC/D,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAS,CAAC,GAAGf,4DAAW,CAAC,aAAa,CAAC;IAE/C,OACIgB,iEAAA,CAACnB,+DAAa;MACVoB,IAAI,EAAC,YAAY;MACjBC,IAAI,EAAC,OAAO;MACZC,KAAK,EAAErB,mDAAE,CAAC,oBAAoB,EAAE,YAAY;IAAE,GAE9CkB,iEAAA,CAACf,4DAAS;MAACkB,KAAK,EAAErB,mDAAE,CAAC,mBAAmB,EAAE,YAAY;IAAE,GACpDkB,iEAAA,CAACd,8DAAW;MACRkB,KAAK,EAAEtB,mDAAE,CAAC,OAAO,EAAE,YAAY,CAAE;MACjCuB,KAAK,EAAEZ,QAAS;MAChBa,QAAQ,EAAGb,QAAQ,IACfM,QAAQ,CAAC;QACLQ,IAAI,EAAE;UACFd;QACJ;MACJ,CAAC;IACJ,EACH,EACFO,iEAAA,CAACb,kEAAe;MACZiB,KAAK,EAAEtB,mDAAE,CAAC,aAAa,EAAE,YAAY,CAAE;MACvCuB,KAAK,EAAEV,cAAe;MACtBW,QAAQ,EAAGX,cAAc,IAAK;QAC1BI,QAAQ,CAAC;UACLQ,IAAI,EAAE;YACFZ;UACJ;QACJ,CAAC,CAAC;MACN;IAAE,EACJ,EACFK,iEAAA,CAACZ,gEAAa;MACVgB,KAAK,EAAEtB,mDAAE,CAAC,yBAAyB,EAAE,YAAY,CAAE;MACnD0B,OAAO,EAAEZ,iBAAkB;MAC3Ba,IAAI,EAAE3B,mDAAE,CACR,uGAAuG,EACvG,YAAY,CACV;MACFwB,QAAQ,EAAEV,iBAAiB,IAAI;QAC3BG,QAAQ,CAAC;UACLQ,IAAI,EAAE;YACFX;UACJ;QACJ,CAAC,CAAC;MACN;IAAE,EACJ,EAEEA,iBAAiB,IACjBI,iEAAA,CAAAU,wDAAA,QACIV,iEAAA;MAAKW,GAAG,EAAEjB;IAAS,EAAG,EACtBM,iEAAA,CAACT,qEAAgB,QACbS,iEAAA,CAACV,gEAAW;MACRsB,MAAM,EAAE,CAAC,OAAO,CAAE;MAClBpB,MAAM,EAAEqB,IAAA,IAAc;QAAA,IAAb;UAAEC;QAAK,CAAC,GAAAD,IAAA;QACb,OACIb,iEAAA,CAACX,yDAAM;UAAC0B,SAAS;UAACC,OAAO,EAAEF;QAAK,GAC3BhC,mDAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAC5B;MAEjB,CAAE;MACFmC,QAAQ,EAAGC,KAAK,IAAK;QACjBnB,QAAQ,CAAC;UACLQ,IAAI,EAAE;YACFb,QAAQ,EAAEwB,KAAK,CAACC,KAAK,CAACC,SAAS,CAACC;UACpC;QACJ,CAAC,CAAC;MACN;IAAE,EACJ,CACa,CACpB,CAEC,CAEA;EAGxB;AACJ,CAAC,CAAC;;;;;;UChGF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://udemy-plus/external window [\"wp\",\"blockEditor\"]","webpack://udemy-plus/external window [\"wp\",\"components\"]","webpack://udemy-plus/external window [\"wp\",\"data\"]","webpack://udemy-plus/external window [\"wp\",\"editPost\"]","webpack://udemy-plus/external window [\"wp\",\"element\"]","webpack://udemy-plus/external window [\"wp\",\"i18n\"]","webpack://udemy-plus/external window [\"wp\",\"plugins\"]","webpack://udemy-plus/./src/block-editor/sidebar.js","webpack://udemy-plus/webpack/bootstrap","webpack://udemy-plus/webpack/runtime/make namespace object"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","import { registerPlugin } from '@wordpress/plugins';\r\nimport { PluginSidebar } from '@wordpress/edit-post';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useSelect, useDispatch } from \"@wordpress/data\";\r\nimport {\r\n    PanelBody,\r\n    TextControl,\r\n    TextareaControl,\r\n    ToggleControl,\r\n    Button\r\n} from \"@wordpress/components\";\r\nimport { MediaUpload, MediaUploadCheck } from \"@wordpress/block-editor\";\r\n\r\nregisterPlugin(\"up-sidebar\", {\r\n    render() {\r\n        const {og_title, og_image, og_description, og_override_image} = useSelect((select) => {\r\n            return select(\"core/editor\").getEditedPostAttribute(\"meta\");\r\n        });\r\n\r\n        const { editPost } = useDispatch(\"core/editor\");\r\n\r\n        return( \r\n            <PluginSidebar\r\n                name=\"up_sidebar\"\r\n                icon=\"share\"\r\n                title={__(\"Udemy Plus Sidebar\", \"udemy-plus\")}\r\n            >\r\n                <PanelBody title={__(\"Opengraph Options\", \"udemy-plus\")}>\r\n                    <TextControl \r\n                        label={__(\"Title\", \"udemy-plus\")}\r\n                        value={og_title}\r\n                        onChange={(og_title) => \r\n                            editPost({\r\n                                meta: {\r\n                                    og_title, \r\n                                }\r\n                            })\r\n                        }\r\n                    />\r\n                    <TextareaControl \r\n                        label={__(\"Description\", \"udemy-plus\")}\r\n                        value={og_description}\r\n                        onChange={(og_description) => {\r\n                            editPost({\r\n                                meta: {\r\n                                    og_description, \r\n                                }\r\n                            })\r\n                        }}\r\n                    />\r\n                    <ToggleControl \r\n                        label={__(\"Override Featured Image\", \"udemy-plus\")}\r\n                        checked={og_override_image}\r\n                        help={__(\r\n                        \"By default, the featured image will be used as the image. Check this option to use a different image.\",\r\n                        \"udemy-plus\"\r\n                        )}\r\n                        onChange={og_override_image => {\r\n                            editPost({\r\n                                meta: {\r\n                                    og_override_image, \r\n                                }\r\n                            })\r\n                        }}\r\n                    />\r\n                    {\r\n                        og_override_image &&\r\n                        <>\r\n                            <img src={og_image} />\r\n                            <MediaUploadCheck>\r\n                                <MediaUpload \r\n                                    accept={['image']}\r\n                                    render={({ open }) => {\r\n                                        return (\r\n                                            <Button isPrimary onClick={open}>\r\n                                                {__(\"Change Image\", \"udemy-plus\")}\r\n                                            </Button>\r\n                                        )\r\n                                    }}\r\n                                    onSelect={(image) => {\r\n                                        editPost({\r\n                                            meta: {\r\n                                                og_image: image.sizes.opengraph.url\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </MediaUploadCheck>\r\n                        </>\r\n                    }\r\n                </PanelBody>\r\n\r\n            </PluginSidebar>\r\n        )\r\n\r\n    }\r\n})","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["registerPlugin","PluginSidebar","__","useSelect","useDispatch","PanelBody","TextControl","TextareaControl","ToggleControl","Button","MediaUpload","MediaUploadCheck","render","og_title","og_image","og_description","og_override_image","select","getEditedPostAttribute","editPost","createElement","name","icon","title","label","value","onChange","meta","checked","help","Fragment","src","accept","_ref","open","isPrimary","onClick","onSelect","image","sizes","opengraph","url"],"sourceRoot":""}