{"version":3,"file":"blocks/auth-modal/frontend.js","mappings":";;;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD;EACA,MAAMC,YAAY,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,aAAa,CAAC;EAC5D;EACD,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAa,CAAC,iCAAiC,CAAC;EACzE,MAAMC,YAAY,GAAGN,QAAQ,CAACG,gBAAgB,CAC1C,kCAAkC,CACrC;;EAED;EACAD,YAAY,CAACK,OAAO,CAAEC,EAAE,IAAK;IACzBA,EAAE,CAACP,gBAAgB,CAAC,OAAO,EAAEQ,KAAK,IAAI;MAClCA,KAAK,CAACC,cAAc,EAAE;MACtB;MACAN,OAAO,CAACO,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFN,YAAY,CAACC,OAAO,CAAEC,EAAE,IAAK;IACzBA,EAAE,CAACP,gBAAgB,CAAC,OAAO,EAAEQ,KAAK,IAAI;MAClCA,KAAK,CAACC,cAAc,EAAE;MACtB;MACAN,OAAO,CAACO,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAC1C,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;EACA,MAAMC,IAAI,GAAGd,QAAQ,CAACG,gBAAgB,CAAC,SAAS,CAAC;EACjD,MAAMY,UAAU,GAAGf,QAAQ,CAACK,aAAa,CAAC,aAAa,CAAC;EACxD,MAAMW,UAAU,GAAGhB,QAAQ,CAACK,aAAa,CAAC,aAAa,CAAC;;EAExD;EACAS,IAAI,CAACP,OAAO,CAAEU,GAAG,IAAK;IAClBA,GAAG,CAAChB,gBAAgB,CAAC,OAAO,EAAEQ,KAAK,IAAI;MACnCA,KAAK,CAACC,cAAc,EAAE;;MAEtB;MACA;MACAI,IAAI,CAACP,OAAO,CAAEW,UAAU,IAAK;QACzB;QACAA,UAAU,CAACP,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;MAC7C,CAAC,CAAC;;MAEF;MACAJ,KAAK,CAACU,aAAa,CAACR,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;;MAE/C;MACA,MAAMQ,SAAS,GAAIX,KAAK,CAACU,aAAa,CAACE,YAAY,CAAC,MAAM,CAAC;MAE3D,IAAGD,SAAS,KAAK,aAAa,EAAC;QAC3BL,UAAU,CAACO,KAAK,CAACC,OAAO,GAAG,OAAO;QAClCP,UAAU,CAACM,KAAK,CAACC,OAAO,GAAG,MAAM;MACrC,CAAC,MAAM;QACHR,UAAU,CAACO,KAAK,CAACC,OAAO,GAAG,MAAM;QACjCP,UAAU,CAACM,KAAK,CAACC,OAAO,GAAG,OAAO;MACtC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EAEFP,UAAU,CAACf,gBAAgB,CAAC,QAAQ,EAAEQ,KAAK,IAAI;IAC3CA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA,MAAMc,cAAc,GAAGR,UAAU,CAACX,aAAa,CAAC,UAAU,CAAC;IAC3DmB,cAAc,CAACC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;IAE7C,MAAMC,YAAY,GAAGV,UAAU,CAACX,aAAa,CAAC,gBAAgB,CAAC;IAC/DqB,YAAY,CAACC,SAAS,GAAI;AAClC;AACA;AACA;AACA,SAAS;EACL,CAAC,CAAC;AACN,CAAC,CAAC,C","sources":["webpack://udemy-plus/./src/blocks/auth-modal/frontend.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    //select class open-modal\r\n    const openModalBtn = document.querySelectorAll('.open-modal')\r\n     //select class wp-block-udemy-plus-auth-modal\r\n    const modalEl = document.querySelector('.wp-block-udemy-plus-auth-modal')\r\n    const modalCloseEl = document.querySelectorAll(\r\n        '.modal-overlay, .modal-btn-close'\r\n    )\r\n\r\n    // lopping through every element to listen for a click event\r\n    openModalBtn.forEach((el) => {\r\n        el.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            // we opened the modal by adding a class that modifies the display property\r\n            modalEl.classList.add('modal-show')\r\n        })\r\n    })\r\n\r\n    modalCloseEl.forEach((el) => {\r\n        el.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            // we remove class\r\n            modalEl.classList.remove('modal-show')\r\n        })\r\n    })\r\n\r\n    //inside this element we are selecting the anchor elements which are the links for the tabs\r\n    const tabs = document.querySelectorAll('.tabs a')\r\n    const signinForm = document.querySelector('#signin-tab')\r\n    const signupForm = document.querySelector('#signup-tab')\r\n\r\n    //looping through the elements to apply click events\r\n    tabs.forEach((tab) => {\r\n        tab.addEventListener('click', event => {\r\n            event.preventDefault()\r\n\r\n            //passing a funtion to handle each iteration , we are going to refer to each item in the array as current tab\r\n            //looping through the tabs to remove the active tab class\r\n            tabs.forEach((currentTab) => {\r\n                //the class can be removed by calling the current tab class list to remove function pass in the active tab class\r\n                currentTab.classList.remove('active-tab')\r\n            })\r\n\r\n            //console.log(event.currentTarget) this property is an object for the element that triggered the event\r\n            event.currentTarget.classList.add('active-tab')\r\n\r\n            //getAttribute will grab any attributes value from an elenment\r\n            const activeTab =  event.currentTarget.getAttribute('href')\r\n\r\n            if(activeTab === '#signin-tab'){\r\n                signinForm.style.display = 'block';\r\n                signupForm.style.display = 'none';\r\n            } else {\r\n                signinForm.style.display = 'none';\r\n                signupForm.style.display = 'block';\r\n            }\r\n        })\r\n    })\r\n\r\n    signupForm.addEventListener('submit', event => {\r\n        event.preventDefault();\r\n\r\n        //select from registration form fieldset\r\n        const signupFieldset = signupForm.querySelector('fieldset')\r\n        signupFieldset.setAttribute('disabled', true)\r\n\r\n        const singupStatus = signupForm.querySelector('#signup-status')\r\n        singupStatus.innerHTML = `\r\n        <div class=\"modal-status modal-status-info\">\r\n            Please wait! We are creating your account.\r\n        </div>\r\n        `\r\n    })\r\n})"],"names":["document","addEventListener","openModalBtn","querySelectorAll","modalEl","querySelector","modalCloseEl","forEach","el","event","preventDefault","classList","add","remove","tabs","signinForm","signupForm","tab","currentTab","currentTarget","activeTab","getAttribute","style","display","signupFieldset","setAttribute","singupStatus","innerHTML"],"sourceRoot":""}